<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_clone_standingR</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 0.6;
hsp = 0;
vsp = 0;
jumpspeed = 7;
movespeed = 6;
movingTicks = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player = instance_find(obj_player, 0);

if (!player.isDead)
    hsp = -player.hsp;

if (hsp &lt; 0)
    sprite_index = spr_clone_movingL;
else if (hsp &gt; 0)
    sprite_index = spr_clone_movingR;
else
{
    if (sprite_index == spr_clone_movingL)
        sprite_index = spr_clone_standingL;
    else if (sprite_index == spr_clone_movingR)
        sprite_index = spr_clone_standingR;
}

if (vsp &lt; 10) vsp += global.grav;

if (place_meeting(x,y+1,obj_wall) &amp;&amp; !player.isDead)
{
    vsp = player.vsp;
}

//side collision
if (place_meeting(x+hsp,y,obj_wall))
{
    if (place_meeting(x+hsp,y,obj_box))
    {
        box = instance_nearest(x+hsp,y,obj_box);
        box.hsp = hsp;
    }
    while(!place_meeting(x+sign(hsp),y,obj_wall)) 
    {
        x += sign(hsp);
    }
    hsp = 0;
}    
x += hsp;

// more side collision
if (place_meeting(x,y+vsp,obj_wall))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall)) 
    {
        y += sign(vsp);
    }
    vsp = 0
}
y += vsp;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
